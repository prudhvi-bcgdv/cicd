# This is a basic workflow to help you get started with Actions

name: WorkSpace_CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches:
      - '*'         # matches every branch that doesn't contain a '/'
      - '*/*'       # matches every branch containing a single '/'
      - '**'        # matches every branch
      - '!master'   # excludes master
  pull_request:
    branches:
      - '*'         # matches every branch that doesn't contain a '/'
      - '*/*'       # matches every branch containing a single '/'
      - '**'        # matches every branch
      - '!master'   # excludes master

  # Allows you to run this workflow manually from the Actions tab
  #workflow_dispatch:

env:
    GCP_REGION: us-east1
    PROJECT_ID: ctd-122381-3-sandbox
    REPO_NAME: dcp-core-services-ref
    IMAGE_NAME: dcp-core-services-image-poc
    TAG_NAME: latest
    SERVICE_NAME: dcp-core-services-image-poc

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  
  setup_node:
    runs-on: ubuntu-latest
    
    steps:
      - name: Setup Node.js environment
        uses: actions/setup-node@v3.1.1
        with:
          # Set always-auth in npmrc
          always-auth: false

  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: setup_node

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3


      # Runs a set of commands using the runners shell
      - name: Run Build
        run: |
        
            npm install
            npm run build
  
  lint_checkup:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v3
      
      
      - name: Run Lint Checkup
        run: |
        
            npm install --only=dev
            npm run lint

  build_docker:
    runs-on: ubuntu-latest
    needs: lint_checkup

    steps:
      - uses: actions/checkout@v3

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Build Docker Image
        run: |
          gcloud auth configure-docker us-east1-docker.pkg.dev
          docker-compose up -d
          docker tag dcp-core-service-image-name ${GCP_REGION}-docker.pkg.dev/${PROJECT_ID}/${REPO_NAME}/${IMAGE_NAME}
          docker push ${GCP_REGION}-docker.pkg.dev/${PROJECT_ID}/${REPO_NAME}/${IMAGE_NAME}

  deploy_to_cloud_run:
    runs-on: ubuntu-latest
    needs: build_docker
    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Setup GCP Service Account
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: 'latest'
          service_account_email: ${{ secrets.GCP_SA_EMAIL }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy $SERVICE_NAME \
          --platform managed \
          --project ${PROJECT_ID} \
          --region $GCP_REGION \
          --allow-unauthenticated \
          --max-instances 1 \
          --command "npm" \
          --image ${GCP_REGION}-docker.pkg.dev/${PROJECT_ID}/${REPO_NAME}/${IMAGE_NAME}:${TAG_NAME}